#include<iostream>
#include<sstream>
#include<algorithm>
#include<iomanip>
#include<cstdio>
#include<cstdlib>
#include<cctype>
#include<map>
#include<vector>
#include<cmath>
#include<queue>
#include<cstring>
#include<set>
#include<functional>
#include<list>
#include<stack>
#include<cstring>
#include<utility>
#include <climits>
using namespace std;

int p[1000010]={};
void maxheapify(int P,int R){
    int C=P*2;    //P(arent) C(hild)
    while(C<=R){
        if(C+1<=R&&p[C]<p[C+1])C++;
        if(p[C]>p[P])
        swap(p[C],p[P]);
        P=C;
        C=P*2;
        }
}
void build(int R){ // R(ight)
    for(int i=R/2;i>0;i--)
        maxheapify(i,R);    
}
void  floydheapify(int R){
   int P=1,C=2;
   while(C<=R){
     if(C+1<=R&&p[C]<p[C+1])C++;
     swap(p[P],p[C]);
     P=C;
     C=P*2;    
    }   
     while(P>1&&p[P]>p[P/2]){
      swap(p[P],p[P/2]);
      P/=2;        
    } 
}
void heapsort(int R){
    build(R);
    while(R>1){
        swap(p[1],p[R]);
        R--;
        floydheapify(R);
    } 
}

int main(){
    int n;
    while(cin>>n){
        for(int i=1;i<=n;i++)
             cin>>p[i];
        heapsort(n); 
     for(int i=1;i<=n;i++)
        cout<<p[i]<<' ';
        cout<<endl;
    }
}
sample input 
5
1 3 7 0 4
output
0 1 3 4 7
zj/ a233
