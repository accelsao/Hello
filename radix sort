#include<iostream>
#include<sstream>
#include<algorithm>
#include<iomanip>
#include<cstdio>
#include<cstdlib>
#include<cctype>
#include<map>
#include<vector>
#include<cmath>
#include<queue>
#include<cstring>
#include<set>
#include<functional>
#include<list>
#include<stack>
#include<cstring>
#include<utility>
#include <climits>
using namespace std;

int a[1000001];
int tmp[10][1000001] = {};
int order[1000001] = {};
int n;
int dig;
void radixsort(){
	
	int an = 1;
	while (an <= dig){
		int i;
		for (i = 0; i < n; i++){
			int lsd = ((a[i] / an) % 10);
			tmp[lsd][order[lsd]] = a[i];
			order[lsd]++;
		}
		int k = 0;
		for (i = 0; i < 10; i++)
			if (order[i]){
				int j;
				for (j = 0; j < order[i]; j++, k++)
					a[k] = tmp[i][j];
				order[i] = 0;
			}
		an *= 10;
	}
}

int main(){
	while (~scanf("%d", &n)){
		for (int i = 0; i < 10; i++)
			for (int j = 0; j < n; j++)
				tmp[i][j] = 0;
		for (int j = 0; j < n; j++)
			order[j] = 0;
		int m = 0;
		for (int i = 0; i < n; i++){
			scanf("%d", &a[i]);
			m = max(m, a[i]);
		}
		dig = 0;
		while (m){
			dig++;
			m /= 10;
		}
		dig = pow(10, dig - 1);

		radixsort();
		for (int i = 0; i < n; i++)
			printf("%d ", a[i]);
		puts("");
	}
}

sample
input 
5
1 3 7 0 4
output
0 1 3 4 7
zj / a233
